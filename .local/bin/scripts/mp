#!/bin/sh
# Play given files on mpd, enabling playing of external files through symlinking and recursively resolving playlists
# depends: xargs realpath mpc
# env: MUSIC
MUSIC="${MUSIC:-$(cat ${XDG_CONFIG_HOME:-$HOME/.config}/mpd/mpd.conf | grep music_directory | cut -d'"' -f2 | sed "s|~|$HOME|")}"
PLAYLISTS="$MUSIC/Playlists"
LINKS="$MUSIC/links"
if test "$1" = "-r"
then shift
	test "$1" = "-v" && verbose=-v && shift
	for arg
	do filepath="$({ find "$(dirname "$arg")" -maxdepth 1 -name "$(basename "$arg")*" -exec realpath {} + ||
		find "$MUSIC/$(dirname "$arg")" "$MUSIC/Playlists/$(dirname "$arg")" -maxdepth 1 \
			-name "$(basename "$arg")*" -exec realpath {} +; } 2>/dev/null)"
		test -n "$verbose" && echo "Scanning path '$filepath' $(
			test "$arg" != "$filepath" && echo "from '$arg' ")(MUSIC: '$MUSIC', PWD: '$PWD')" >&2
		test $(printf "$filepath" | wc -l) -gt 0 && printf "$filepath" | xargs --delim='\n' "$0" -r $verbose && continue
		test -n "$filepath" || continue
		if { file "$filepath" | grep -i ' playlist' || expr "$filepath" : ".*\.m3u8\?$"; } >/dev/null
		then pushd "$(dirname "$filepath")" >/dev/null &&
			cat "$filepath" | sed '/#.*/D' | xargs --delim='\n' "$0" -r $verbose &&
			popd >/dev/null
		else
			test -n "$verbose" &&
				echo "Running find in path '$filepath' $(test "$arg" != "$filepath" && echo "from '$arg' ")(MUSIC: '$MUSIC', PWD: '$PWD')" >&2
			find "$filepath" -iname "*.flac" -o -iname "*.mp3" -o -iname "*.ogg" -o -iname "*.opus" |
				sort | while read file
				do case "$filepath" in
					($MUSIC/*) echo "${file#$MUSIC/}";;
					(*) mkdir -p "$LINKS" &&
						ln -fs "$file" "$LINKS/$(basename "$file")" &&
						echo "${LINKS#$MUSIC/}/$(basename "$file")";;
				esac done
		fi
	done
else
	test "$1" = "-q" && quiet=-q && shift
	test -n "$(mpc playlist)" -a "$(mpc status | wc -l)" -gt 1 && next=-q
	test "$1" = "--seek" && seek=-q
	( "$0" -r "$@" && mpc -q update --wait ) | #tee /tmp/mp 2>&1
		xargs --delim='\n' mpc insert
	mpc ${quiet:-${next:-$seek}} play
	test -z "$next" || mpc ${quiet:-$seek} next
	test -z "$seek" || mpc $quiet seek "30%"
fi
