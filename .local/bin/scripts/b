#!/bin/bash
# [b]rowse - overview of given files or current directory
# depends: tput stat bat checkaccess(in my dotfiles)
# optdepends: timg, neovim (compressed files), pdftoppm (PDF), mtn (video), audiowaveform
# args: files to inspect
#
# Supports:
# - listing directories
# - listing contents of any compressed file with neovim
# - visual files are displayed with timg
#   video thumbnails via mtn, pdf pages from pdftoppm
# - text files are displayed through bat
# Automatically requests elevation through sudo when needed

set -o pipefail
test "$1" = "-v" &&
	set -eo xtrace &&
	shift
inspect=false
test "$1" = "-i" &&
	inspect=true &&
	shift

checkperm() {
	checkaccess -r "$@" || elevate=sudo
	mime="$(test -n "$shifted" || $elevate file --dereference --mime "$@")"
}
fileinfo() {
	tput setaf 6
	for arg
	do case "$arg" in (-*) continue;; esac
		$elevate file -E "$arg"
		#probe="$($elevate ffprobe "$arg" 2>&1)"
		#echo $probe | grep -v -e '00:00:00.04' -e 'ansi' &&
		$elevate ffprobe "$arg" 2>&1 | grep "bitrate: ....\? " | sed 's/, start:[^,]\+,/,/' ||
			stat --format "%A %s $(
					size="$($elevate unzip -l "$arg" 2>/dev/null | tail -1)" &&
						echo "(uncompressed $(echo $size | cut -d' ' -f1 | numfmt --to=iec-i --suffix=B))"
				) - birth %.10w mod %.10y" "$arg" | numfmt --field=2 --to=iec-i --padding=6 --suffix=B
	done
	tput sgr0
}

prefix=/tmp/b
mkdir -p "$prefix"
declare -a timg timga bat batl ls
for arg; do
	case "$arg" in (-*) args="$args $arg"; continue;; esac
	checkperm "$arg"
	grid=$(expr $(tput cols) / 20)
	tmpfile="$prefix/$(basename "$arg")"
	case "$mime" in
	(*\ application/pdf\;*)
		test -f "$tmpfile-1.png" || pdftoppm -r 70 "$arg" "$tmpfile" -l $(expr $grid '*' 2)
		timg -W --grid=$grid "$tmpfile"*
		;;
	(*/x-xcf*) ;;
	(*\ video/*)
		suffix=_thumbs.jpg
		mtn -i -t -W -r2 -D6 -b 0,6 -c $grid -w $(expr $(tput cols) '*' 20) \
			-O $prefix -o $suffix "$arg" 2>/dev/null
		timg -W "$prefix/$(basename "${arg%.*}")$suffix"
		;;
	(*\ image/*)
		timg+=("$arg"); continue;;
	(*\ inode/directory\;*)
		ls+=("$arg"); continue;;
	(*)
		case "$(file "$arg")" in
		(*\ ?udio*)
			img="$tmpfile.png"
			if which audiowaveform 2>/dev/null >&2
			then find "$img" -not -empty 2>/dev/null | grep --quiet . ||
				audiowaveform --quiet --pixels-per-second 2 --height 36 --width 2000 --amplitude-scale auto \
					--background-color 000000 --waveform-color 99BBFF --axis-label-color 000000 \
					--input-filename "$arg" --output-format png >"$img" && {
						timg -g $(tput cols)x2 "$arg" && printf "\\033[2A     "
						timg -g $(tput cols)x2 --auto-crop --upscale "$img"
					}
			fi
			timga+=("$arg")
			;;
		(*:\ *compress*|*\ archive*)
			list="$tmpfile-list.txt"
			if test $# = 1
			then nvim "$arg"
			else case "$arg" in (*.part);; (*)
				nvim -es "+2w$list|5,w>>$list" "$arg"
				batl+=("$list");;
			esac; fi
			;;
		(*:\ *database*) sqlite3 "$arg" ".tables";;
		(*) bat+=("$arg")
			timga+=("$arg")
			continue;;
		esac
		;;
	esac
	fileinfo "$arg"
done

if test "$timg"; then
	$inspect || $elevate timg $(test "$timga" && echo "-V") --rotate=exif -g $(tput cols)x$(expr $(tput lines) / 2) \
		$(test $# -gt 1 && grid=$(expr $(tput cols) / \( 30 - $# \& $# \< 25 \| 5 \)) &&
		echo "-t0.2 --center $(test $# -lt 30 && echo "--title") --grid=$((grid < $# ? grid : $#))x2") \
		"${timg[@]}" "${timga[@]}" 2>/dev/null
	if $inspect || test $# -lt 15; then
		tput setaf 6
		for img in "${timg[@]}"
		do ident="$(identify -ping -precision 3 -format "%wx%h %b %m %[bit-depth]-bit %[colorspace]" "$img")"
			printf "%11s %-30s	%s\n" "${ident%% *}" "$(basename "$img")" "${ident#* }"
		done
		tput sgr0
	fi
fi

if test "$bat" -o "$batl"; then
	$inspect || if test $# -gt ${#bat[@]} -a $# -gt ${#batl[@]} && test -z "$args"
		then $elevate head "${batl[@]}" "${bat[@]}" | cut -c-$(echo "$(tput cols)*1.9" | bc | cut -d. -f1)
		else test "$(bat --version | cut -d. -f2)" -gt 16 && rule=,rule
			test "$bat" && $elevate bat --style $(test $# -gt 1 && echo "numbers,")header$rule --pager 'less -RF' $args "${bat[@]}"
			test "$batl" && $elevate bat --style plain$rule --pager 'less -RF' $args "${batl[@]}"
		fi
	fileinfo "${bat[@]}"
fi

if test "$ls" -o $# -eq 0; then
	checkperm .
	$elevate ls -l $(test $# -gt ${#ls[@]} && echo "-d") --color=always --human-readable --si --group-directories-first --file-type --dereference-command-line --all "${ls[@]:-.}" | less -RF
fi
